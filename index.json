[{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":null,"permalink":"/","section":"Silvio","summary":"","title":"Silvio"},{"content":"I want to share a small revelation I had in the past week. But first, a bit of context: I am a big fan of note taking and personal knowledge management systems. For years now, I\u0026rsquo;ve been trying to be as intentional as possible with both what I produce and what I consume. And, as you can probably imagine, the biggest fight I have to face in this war is against the passiveness that doom scrolling on social media brings into my life - and probably most of everyone else\u0026rsquo;s -.\nIn an effort to mitigate this problem, I wanted to find a way to trick my brain into not getting distracted by those addictive apps, at least when producing notes. On top of that, I also love stationery and the act of writing on a physical medium, so the natural consequence was to replace my distracting device with a pocket notebook.\nRemoving friction #I\u0026rsquo;m one of those who believes there\u0026rsquo;s something romantic and pure in writing or drawing on paper but, at the same time, I am a also a strong supporter of using digital tools, as they allow us to store and connect an insane amount of information. They both have a place in my day-to-day life, they just serve different purposes: a software like Obsidian serves as the perfect personal knowledge management system, but its flexibility and complexity make it not ideal for storing quick and instant notes.\nAnyway, aside from the specific software or app, I realised - like many others before me - that there\u0026rsquo;s too much friction and distraction in using your phone to capture sudden ideas or notes. I am a programmer, and I know how much it costs, in terms of UX, to add even a single click to a pipeline.\nTake the \u0026ldquo;watch later\u0026rdquo; feature on Youtube, for example: to add a video to the watch later playlist, you have to hit Save, check the correct playlist from the list and close the pop up window. And on desktop, the save button is also hidden behind a three dots expandable menu. That\u0026rsquo;s 4 click to add a video to the watch later!\n![[Pasted image 20240420165140.png]]\nI know that someone might find that a trivial issue, but believe me when I tell you that, for me, even one additional step could tip the scale into procrastination. And that\u0026rsquo;s what happened when I tried to use my phone as my main device to take quick notes: the thought of having to take it out of my pocket, unlock it, open the notes app\u0026hellip; All that while trying not to get distracted by social media/notifications. So much energy that my brain subconsciously decides it isn\u0026rsquo;t worth putting in the effort just to write down a handful of words.\nPocket notebooks didn\u0026rsquo;t solve the issue #This isn\u0026rsquo;t the first time I try to move from digital to analog note-taking. For as much as I tried, I could never stick to capturing my thoughts on a notebook. In some ways, I was experiencing the same amount of friction I had when using my smartphone.\nBut this time, I was really motivated to find a futureproof solution. So, as it often happens when I approach this kind of things, I became obsessed with the topic and went on a deep dive on YouTube, in an effort to distill every trick to establish the best notebook practice possible.\nThe solution disguised as a minor example #My content odyssey didn\u0026rsquo;t bring satisfying result. I couldn\u0026rsquo;t find the secret recipe to a consistent note-taking habit. But, after watching several videos from different creators, I noticed one curious thing: more than one creator was mentioning using their notebook as a coaster. Here are two of them, but there were more:\nThis pocket notebook saved me from scrolling - Tony Ramella TEN YEARS of using POCKET NOTEBOOKS - Blank First Page At first, I didn\u0026rsquo;t make much of it. It was only an example to convey how you shouldn\u0026rsquo;t care too much about ruining your notebook. But, after hearing that sentence multiple times, you could say I got influenced by those youtubers and, in the subsequent days, I started to take out my notebook every time I placed a drink on my desk. Two weeks passed, and I realise the secret tip I\u0026rsquo;ve been looking for.\n![[PXL_20240417_152433395.jpg]]\nA habit that I already have is to stay hydrated. During my day, there aren\u0026rsquo;t many moments where I don\u0026rsquo;t have a cup of coffee, tea, or my water bottle within arms reach. So, when I started to follow this trend, I was involuntarily removing one of the few obstacles that remained between me and the act of writing: keeping my note-taking device close and in sight at all time. Now, whether I\u0026rsquo;m sitting at my desk in the office, or relaxing on the couch in my living room, I actively look for my pocket notebook to place my cup/bottle on top of it and, every time I reach for a sip - once every couple of minutes, on average - I am reminded of its existence and usefulness.\n","date":"14 April 2024","permalink":"/posts/pocket-notebook-coaster/","section":"Posts","summary":"A small tale of how an insignificant example repeated in a bunch of YouTube videos made me significantly improve my note-taking habit. Now I carry with me a pocket notebook everywhere I go, and I can take quick notes without any friction.","title":"Why you should use your pocket notebook as a coaster"},{"content":"I\u0026rsquo;ve always struggled with generating a consistent output that can be considered as purely creative. You could say I\u0026rsquo;m a natural when it comes to technical projects, things that have a clear, quantifiable goal. But, when there isn\u0026rsquo;t a binary outcome (it works vs. it doesn\u0026rsquo;t work) to the end of a project, my brain freezes: no clear end means no defined path, no fixed list of steps to perform (or tentative solutions to try). The only way to move forward is to explore, experiment in every direction and constantly revise your position to be able to plan your next step. And I\u0026rsquo;m not very good at that.\nA rationale for choosing to write #So, I decided that things needed to change. I chose to focus on writing specifically, as I\u0026rsquo;m currently working my way through the book \u0026ldquo;Writing to Learn\u0026rdquo; by William Zinsser. In addition to that, some posts by Anne-Laure Le Cunff really motivated me to start from this practice, and helped me get to the conclusion that, out of all the creative projects that I\u0026rsquo;d like to embark on in this lifetime (including, but not limited to: make a music album, write and maintain a blog, create a photography project), writing is the most easily approachable. There are multiple reasons for this:\n1. I\u0026rsquo;m already used to write all the time - I\u0026rsquo;ve been taking notes in my Obsidian for years, and since November 4th, 2022, I started keeping a journal for both my work and my personal life. This helped me overcome the fear of the blank page and to break the infinite revision loop that comes from perfectionism and from your inner critic.\n2. I can write anywhere - I don\u0026rsquo;t need to use dedicated tools, or to be in a specific environment. The bar to start writing is so low that I just need to get past that initial friction of opening your laptop, phone or notebook. Similar to when you want to go out for a run first thing in the morning, so you prepare your outfit and running shoes on a chair the night before. Once you are dressed and outside, it\u0026rsquo;s very unlikely that you\u0026rsquo;ll go back to bed!\n3. Delayed gratification - To quote Zinsser\nI don\u0026rsquo;t like to write, but I take great pleasure in having written - in having finally made an arrangement that has a certain inevitability, like the solution to a mathematical problem. Perhaps in no other line of work is delayed gratification so delayed.\nAnd this differs from photography or music production in the sense that, after having written, the process feels as satisfying as the outcome, if not more. When I started keeping a journal and taking notes in a more centralised fashion, I noticed I was almost always satisfied with whatever I produced. Then I realised: the source of my gratification wasn\u0026rsquo;t the product itself, but the act of having created it. Even if it isn\u0026rsquo;t the best piece ever written, seeing my thoughts organised on the page makes the process worth.\nStart off on the right foot #Following the advice of Anne-Laure Le Cunff, I sat down and took some time to answer these questions and define my writing ikigai.\n1. Why do I write? - I can think of three reasons that drive this desire: first, I want to produce a significant output, something that, amidst the noise of modern information, can be deemed as valuable; second, writing helps me to learn and remember things. I have a very bad memory - probably inherited from my father -. Luckily, it seems limited to some specific fields, but I\u0026rsquo;d still like to improve it, and maybe retain more of what I read; last, writing helps me think clearly and improve my reasoning process.\n2. Who am I writing for? - As you can already tell by the reasons I just listed, at this time, I write mainly for myself. I don\u0026rsquo;t exclude that, at some point, I might consider writing as a way to connect with people, or to express concepts and feelings to my close ones. But for now, this remains a public introspective project, which could lead some to ask:\n2a. Then why making it public? - Fair question. I guess to have some sort of accountability. Even if no one reads it, the idea of putting things out there is enough to give me a sense of responsibility that keeps me going. Also, I have a fear of producing and letting out in the world useless noise (I\u0026rsquo;m looking at you, people that publish books written by LLMs), which helps to maintain a certain level of quality.\n3. What do I love learning about? - This is the toughest and most unclear answer of the three. The problem is: I don\u0026rsquo;t love learning about something, I just love learning. That\u0026rsquo;s why, after banging my head against the wall to try and find a clear answer, I decided to give up, and leave the scope of my writing as broad as possible. I could share notes on a complicated topic I want to break down, or internalise something I experienced, or build up a structured thought after a deep conversation with a friend. After all, I\u0026rsquo;ll be the main target audience for this blog.\nA pact with myself #In addition to all that, I\u0026rsquo;m also using this project as a chance to try out another concept I discovered by reading Ness Labs: in an attempt to make this writing practice a habit, I am making a PACT with myself. A PACT is a method for defining goals based on four factors: Purposeful, Actionable, Continuous and Trackable. It\u0026rsquo;s opposed to the much more popular SMART (Specific, Measurable, Achievable, Relevant, Timely), which focuses on the pursuit of a well-defined outcome, and because of that isn\u0026rsquo;t well suited for long-term, continuous projects.\nThe PACT I decided to make is to publish at least 2 blogposts every month. That\u0026rsquo;s it. Now, I just have to stick to the plan and enjoy the ride.\n","date":"10 March 2024","permalink":"/posts/writing-journey/","section":"Posts","summary":"I\u0026rsquo;ve always struggled with pure creativity, and I\u0026rsquo;d like to improve. So, I decided to analyse my current situation and come up with a plan to start a continuous creative practice: writing.","title":"Beginning of a writing journey"},{"content":"Last updated: 22 March 2024, from my house in Manchester, UK.\nStill Exploring the \u0026lsquo;Verse #My current role is Audio Programmer II at Cloud Imperium Games, where I\u0026rsquo;ve been employed for around 2 years and 9 months.\nIn Q4 2023, I became the audio code owner for Ship Flight and Vehicle Experience. I\u0026rsquo;ve been supporting features like master modes, quantum travel rework, structural salvage, tractor beams, and other exciting projects that aren\u0026rsquo;t ready to be shared yet!\nAlong with the rest of the audio code team, I am still carrying on the development of our in-house audio engine CIGAudio, and its associated design tool Claudius.\nEvery day, I try to learn as much as possible from this industry and all my amazing colleagues.\nTime to Create #After lots of procrastination, doubts and excuses, I decided to start this blog!\nOver the past years, I have been neglecting my creative vein, often falling into the \u0026ldquo;it\u0026rsquo;s not good enough\u0026rdquo; mindset. My inner critic kept blocking me from creating and sharing music pieces, photographs or articles. It\u0026rsquo;s time to change that.\nI still have to define goals, set rules or develop habits. I don\u0026rsquo;t know if it\u0026rsquo;ll stick or if I\u0026rsquo;ll fail tomorrow. But, to quote Carol Kohl (from Carol \u0026amp; the End of the World):\nNot sure when she\u0026rsquo;ll finish it, but I like how one starts.\nRiding Shai-Hulud and Learning to Write #I\u0026rsquo;m totally absorbed by the Dune universe. I watched Dune: Part Two and it quickly became one of my favourite movies (along with the first part, Dune). At the end of February, I finished reading Dune Messiah, and now I started Children of Dune.\nAside from Arrakis, I am exploring the topic of writing through the works of William Zinsser: I am making my way through Writing to Learn and planning to read On Writing Well and Writing About Your Life next.\n/now page inspired by Derek Sivers\n","date":"8 March 2024","permalink":"/now/","section":"Silvio","summary":"This is a now page, and if you have your own site, you should make one, too.","title":"now"},{"content":"","date":null,"permalink":"/tags/iot/","section":"Tags","summary":"","title":"IoT"},{"content":"","date":null,"permalink":"/tags/programming/","section":"Tags","summary":"","title":"Programming"},{"content":"This article is to demonstrate how to program an Arduino Nano 33 IoT board to communicate with Microsoft Azure. With a quick Google search, you would find out that there\u0026rsquo;s already a library with all the functions required to share messages between Azure and Arduino boards. It is called AzureIoTHub and is the IoT Hub\u0026rsquo;s official Arduino library, published by Azure as a port of the Microsoft Azure IoT device SDK for C). The problem is that it doesn\u0026rsquo;t actually support any Arduino board. Looking at the README.md file, the hardware currently supported is:\nESP8266 based boards with esp8266/arduino\nSparkFun Thing\nAdafruit Feather Huzzah\nESP32 based boards with espressif/arduino-esp32\nAdafruit HUZZAH32 So, until the next compatibility update, the only way to send telemetry from a Nano 33 IoT to Azure IoT Hub is through third-party libraries.\nPrerequisites #To code my workaround, I used the following libraries:\nArduinoJson - To encapsulate my data in a JSON message, one of the formats accepted by IoT Hub;\nWiFiNINA - To connect the board to the WiFi;\nArduinoMqttClient - Client that allows to send and receive MQTT messages;\nArduinoBearSSL - Port of BearSSL to Arduino, to implement the SSL/TLS protocol;\nArduinoECCX08 - Library for the Atmel/Microchip ECC508 and ECC608 crypto chips, used for authentication with IoT Hub with a SelfSigned X.509 certificate;\nAll libraries must be installed on your system before compiling the code (instructions on how to install Arduino libraries can be found here).\nImplementation #Unfortunately, it\u0026rsquo;s not that easy. Turns out that in the first version of my code, I could successfully send short messages over Serial and MQTT. But, when I tried to send a JSON text bigger than 256 Bytes (i.e. longer than 256 characters), it arrived at the Hub truncated.\nScreenshot of the Azure Cloud Shell when receiving a truncated message. A similar issue is documented here, using a different library for the MQTT client. In that case, the advised solution is to change the value ENTER VALUE TO CHANGE from 256 to 2048, but that implies the following things:\nyou\u0026rsquo;d have to edit the library source code, so your program is not reproducible on other systems; you still set a fixed value, which, even if bigger, it\u0026rsquo;s not scalable. Azure Cloud Shell when the hub is receiving the correct message. Instead, the solution explained here doesn\u0026rsquo;t require any modification of the libraries\u0026rsquo; source code, since all the changes are made inside the sketch. Concretely, in the publishMessage() function, we declare the char array named payload, which acts as a temporary buffer to store the JSON document. Then, using serializeJson(), the document is serialized to the buffer and the function returns the number of bytes written, which is stored in payloadSize.\nchar payload[1024]; // length of the char buffer that contains the JSON file, concretely the number of characters included in one message size_t payloadSize = serializeJson(doc, payload); Now that we have the message and its size, we can send it via MQTT protocol to the IoT Hub. Through the overloaded function beginMessage() we pass the topic and the message size. Then, using the Print class implemented in ArduinoMqttClient, the JSON document is passed directly in the message body. Finally, the endMessage() function publishes the document to the specified topic.\n// send message, the Print interface can be used to set the message contents mqttClient.beginMessage(\u0026#34;devices/\u0026#34; + deviceId + \u0026#34;/messages/events/\u0026#34;, static_cast\u0026lt;unsigned long\u0026gt;(payloadSize)); mqttClient.print(payload); mqttClient.endMessage(); The complete function, as found in the example code, is the following:\nvoid publishMessage() { Serial.println(\u0026#34;Publishing message\u0026#34;); const int capacity = JSON_ARRAY_SIZE(10) + 10*JSON_OBJECT_SIZE(2)+ JSON_OBJECT_SIZE(3) + 280; // Calculation of the JSON doc size, as explained in the documentation /* Here is where you should write the body of your message. In this example, the JSON doc is purposely longer than 256 characters, to highlight the issue. */ StaticJsonDocument\u0026lt;capacity\u0026gt; doc; doc[\u0026#34;topic\u0026#34;] = \u0026#34;messageTopic\u0026#34;; doc[\u0026#34;deviceId\u0026#34;] = deviceId; JsonArray data = doc.createNestedArray(\u0026#34;data\u0026#34;); JsonObject data_0 = data.createNestedObject(); data_0[\u0026#34;label\u0026#34;] = \u0026#34;Ankara\u0026#34;; data_0[\u0026#34;state\u0026#34;] = true; JsonObject data_1 = data.createNestedObject(); data_1[\u0026#34;label\u0026#34;] = \u0026#34;Beirut\u0026#34;; data_1[\u0026#34;state\u0026#34;] = true; JsonObject data_2 = data.createNestedObject(); data_2[\u0026#34;label\u0026#34;] = \u0026#34;Cincinnati\u0026#34;; data_2[\u0026#34;state\u0026#34;] = false; JsonObject data_3 = data.createNestedObject(); data_3[\u0026#34;label\u0026#34;] = \u0026#34;Detroit\u0026#34;; data_3[\u0026#34;state\u0026#34;] = false; JsonObject data_4 = data.createNestedObject(); data_4[\u0026#34;label\u0026#34;] = \u0026#34;Eindhoven\u0026#34;; data_4[\u0026#34;state\u0026#34;] = true; JsonObject data_5 = data.createNestedObject(); data_5[\u0026#34;label\u0026#34;] = \u0026#34;Fresno\u0026#34;; data_5[\u0026#34;state\u0026#34;] = false; JsonObject data_6 = data.createNestedObject(); data_6[\u0026#34;label\u0026#34;] = \u0026#34;Genoa\u0026#34;; data_6[\u0026#34;state\u0026#34;] = false; JsonObject data_7 = data.createNestedObject(); data_7[\u0026#34;label\u0026#34;] = \u0026#34;Huddersfield\u0026#34;; data_7[\u0026#34;state\u0026#34;] = true; JsonObject data_8 = data.createNestedObject(); data_8[\u0026#34;label\u0026#34;] = \u0026#34;Istanbul\u0026#34;; data_8[\u0026#34;state\u0026#34;] = true; JsonObject data_9 = data.createNestedObject(); data_9[\u0026#34;label\u0026#34;] = \u0026#34;Jakarta\u0026#34;; data_9[\u0026#34;state\u0026#34;] = false; // DEBUG - serialize the document in the serial monitor // serializeJson(doc, Serial); // Serial.println(\u0026#34; \u0026#34;); char payload[1024]; // length of the char buffer that contains the JSON file, concretely the number of characters included in one message size_t payloadSize = serializeJson(doc, payload); // DEBUG - write the size of the serialized document // Serial.print(\u0026#34;json size:\u0026#34;); // Serial.println(payloadSize); // send message, the Print interface can be used to set the message contents mqttClient.beginMessage(\u0026#34;devices/\u0026#34; + deviceId + \u0026#34;/messages/events/\u0026#34;, static_cast\u0026lt;unsigned long\u0026gt;(payloadSize)); mqttClient.print(payload); mqttClient.endMessage(); /* To replicate the issue, uncomment the following 3 lines and comment the 3 above. This way you\u0026#39;ll only be able to send MQTT messages smaller than 256 Bytes. */ // mqttClient.beginMessage(\u0026#34;devices/\u0026#34; + deviceId + \u0026#34;/messages/events/\u0026#34;); // serializeJson(doc, mqttClient); // mqttClient.endMessage(); } The function above creates a JSON document as follows. Obviously, it can be changed as needed, this is an example to highlight the issue, since the text is longer than 256 characters.\n{ \u0026#34;topic\u0026#34;: \u0026#34;messageTopic\u0026#34;, \u0026#34;deviceId\u0026#34;: \u0026#34;deviceId\u0026#34;, \u0026#34;data\u0026#34;: [ { \u0026#34;label\u0026#34;: \u0026#34;Ankara\u0026#34;, \u0026#34;state\u0026#34;: true }, { \u0026#34;label\u0026#34;: \u0026#34;Beirut\u0026#34;, \u0026#34;state\u0026#34;: true }, { \u0026#34;label\u0026#34;: \u0026#34;Cincinnati\u0026#34;, \u0026#34;state\u0026#34;: false }, { \u0026#34;label\u0026#34;: \u0026#34;Detroit\u0026#34;, \u0026#34;state\u0026#34;: false }, { \u0026#34;label\u0026#34;: \u0026#34;Eindhoven\u0026#34;, \u0026#34;state\u0026#34;: true }, { \u0026#34;label\u0026#34;: \u0026#34;Fresno\u0026#34;, \u0026#34;state\u0026#34;: false }, { \u0026#34;label\u0026#34;: \u0026#34;Genoa\u0026#34;, \u0026#34;state\u0026#34;: false }, { \u0026#34;label\u0026#34;: \u0026#34;Huddersfield\u0026#34;, \u0026#34;state\u0026#34;: true }, { \u0026#34;label\u0026#34;: \u0026#34;Istanbul\u0026#34;, \u0026#34;state\u0026#34;: true }, { \u0026#34;label\u0026#34;: \u0026#34;Jakarta\u0026#34;, \u0026#34;state\u0026#34;: false } ] } I hope that this post was helpful. I uploaded an example of the code to send large JSON data from an Arduino Nano 33 IoT to Azure IoT Hub to a GitHub repository. Follow the instructions in the README.md to configure it properly. Feel free to use it, modify it and extend it as you like. Thanks for reading!\n","date":"24 August 2020","permalink":"/posts/large-json-data/","section":"Posts","summary":"How to program an Arduino 33 IoT board to communicate with Microsoft Azure, through IoT Hub and Stream Analytics. In particular, I explain a workaround to send JSON files bigger than 256 B.","title":"Send Large JSON Data to IoT Hub Using MQTT"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"","section":"","summary":"","title":""},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"I am a R\u0026amp;D engineer at GP2 developing a system for real-time monitoring and predictive maintenance of buildings and infrastructures. My primary functions are something in between a data scientist, software developer and embedded engineer.\nIn 2019, I decided to move from Brescia (Italy) to Leeds (United Kingdom) to study. I graduated a year later with a MSc in Audio Engineering, with a thesis on speech recognition for low power applications.\nNow, I am looking for opportunities to develop my professional career. Being passionate about music, video games, research and artificial intelligence, I want to make a real impact by collaborating on exciting and fulfilling projects that bring together creativity and advanced technologies.\n","date":null,"permalink":"","section":"","summary":"I am a R\u0026amp;D engineer at GP2 developing a system for real-time monitoring and predictive maintenance of buildings and infrastructures.","title":"Silvio Gregorini"}]